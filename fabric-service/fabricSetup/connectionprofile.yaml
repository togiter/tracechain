#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#


#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: Manufacturer

  logging:
    level: info

  # Global configuration for peer, event service and orderer timeouts
  # if this this section is omitted, then default values will be used (same values as below)
#  peer:
#    timeout:
#      connection: 10s
#      response: 180s
#      discovery:
#        # Expiry period for discovery service greylist filter
#        # The channel client will greylist peers that are found to be offline
#        # to prevent re-selecting them in subsequent retries.
#        # This interval will define how long a peer is greylisted
#        greylistExpiry: 10s

    # the below timeouts are commented out to use the default values that are found in
    # "pkg/fab/endpointconfig.go"
    # the client is free to override the default values by uncommenting and resetting
    # the values as they see fit in their config file
#    timeout:
#      connection: 15s
#      registrationResponse: 15s
#  orderer:
#    timeout:
#      connection: 15s
#      response: 15s
#  global:
#    timeout:
#      query: 180s
#      execute: 180s
#      resmgmt: 180s
#    cache:
#      connectionIdle: 30s
#      eventServiceIdle: 2m
#      channelConfig: 30m
#      channelMembership: 30s
#      discovery: 10s
#      selection: 10m

  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ${GOPATH}/src/github.com/tracechain/network/crypto-config

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elswhere.
    path: "/tmp/state-store"

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: /tmp/msp

  # [Optional] BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: false

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path: #${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/users/Admin@manufacturer.tracechain.com/tls/client.key
      cert:
        path: #${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/users/Admin@manufacturer.tracechain.com/tls/client.crt

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:

  # Default channel is used if channel configuration is missing or if defined channel configuration is missing info
  # If channel doesn't define peers then peers from default channel will be used
  # If channel doesn't define orderes then orderes from default channel will be used
  # If channel doesn't define policies then policies from default channel will be used.
  # Also, if channel defines policies and some policy info is missing than that missing info will be filled from default channel.

  # Mychannel overrides initialBackoff for discovery
  # multi-org test channel
  tracechain:
    orderers:
     - orderer.tracechain.com
    peers:
      peer0.manufacturer.tracechain.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.manufacturer.tracechain.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
#     policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0
# list of participating organizations in this network
#
organizations:
  Manufacturer:
    mspid: ManufacturerMSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/manufacturer.tracechain.com/users/{userName}@manufacturer.tracechain.com/msp

    peers:
      - peer0.manufacturer.tracechain.com
      - peer1.manufacturer.tracechain.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca.manufacturer.tracechain.com


  # Orderer Org name
  ordererorg:
      # Membership Service Provider ID for this organization
      mspID: OrdererMSP

      # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
      cryptoPath: ordererOrganizations/tracechain.com/users/Admin@tracechain.com/msp


#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:

  orderer.tracechain.com:
    # [Optional] Default: Infer from hostname
    url: localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.tracechain.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/ordererOrganizations/tracechain.com/tlsca/tlsca.tracechain.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:

  peer0.manufacturer.tracechain.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    url: localhost:7051
    eventUrl: localhost:7053

    #grpcOptions:
    #  ssl-target-name-override: peer0.manufacturer.tracechain.com

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/tlsca/tlsca.manufacturer.tracechain.com-cert.pem

  peer1.manufacturer.tracechain.com:
    # this URL is used to send endorsement and query requests
    url:  localhost:8051
    eventUrl: localhost:8053

    #grpcOptions:
    #  ssl-target-name-override: peer1.manufacturer.tracechain.com

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/tlsca/tlsca.manufacturer.tracechain.com-cert.pem
#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca.manufacturer.tracechain.com:
    # [Optional] Default: Infer from hostname
    url: http://localhost:7054
    # [Optional] The optional server name for target override
    #grpcOptions:
    #  ssl-target-name-override: ca.manufacturer.tracechain.com
    tlsCACerts:
      # Comma-Separated list of paths
      path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/tlsca/tlsca.manufacturer.tracechain.com-cert.pem
      # Client key and cert for SSL handshake with Fabric CA
      client:
        key:
          path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/users/User1@manufacturer.tracechain.com/tls/client.key
        cert:
          path: ${GOPATH}/src/github.com/tracechain/network/crypto-config/peerOrganizations/manufacturer.tracechain.com/users/User1@manufacturer.tracechain.com/tls/client.crt

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.manufacturer.tracechain.com
# EntityMatchers enable substitution of network hostnames with static configurations
 # so that properties can be mapped. Regex can be used for this purpose
# UrlSubstitutionExp can be empty which means the same network hostname will be used
# UrlSubstitutionExp can be given same as mapped peer url, so that mapped peer url can be used
# UrlSubstitutionExp can have golang regex matchers like ${1}.local.tracechain.${2}:${3} for pattern
 # like peer0.manufacturer.tracechain.com:1234 which converts peer0.manufacturer.tracechain.com to peer0.org1.local.tracechain.com:1234
# sslTargetOverrideUrlSubstitutionExp follow in the same lines as
 # SubstitutionExp for the fields gprcOptions.ssl-target-name-override respectively
# In any case mappedHost's config will be used, so mapped host cannot be empty, if entityMatchers are used
#entityMatchers:
entityMatchers:
  peer:
    - pattern: (\w*)peer0.manufacturer.tracechain.com(\w*)
      urlSubstitutionExp: localhost:7051
      sslTargetOverrideUrlSubstitutionExp: peer0.manufacturer.tracechain.com
      mappedHost: peer0.manufacturer.tracechain.com

    - pattern: (\w*)peer1.manufacturer.tracechain.com(\w*)
      urlSubstitutionExp: localhost:8051
      sslTargetOverrideUrlSubstitutionExp: peer1.manufacturer.tracechain.com
      mappedHost: peer1.manufacturer.tracechain.com

  orderer:
    - pattern: (\w*)orderer.tracechain.com(\w*)
      urlSubstitutionExp: localhost:7050
      sslTargetOverrideUrlSubstitutionExp: orderer.tracechain.com
      mappedHost: orderer.tracechain.com

  certificateAuthority:
    - pattern: (\w*)ca.manufacturer.tracechain.com(\w*)
      urlSubstitutionExp: http://localhost:7054
#      sslTargetOverrideUrlSubstitutionExp: ca.tracechain.com
      mappedHost: ca.manufacturer.tracechain.com
#    - pattern: (\w+).org2.tracechain.(\w+)
#      urlSubstitutionExp:
#      sslTargetOverrideUrlSubstitutionExp: ca.tracechain.com
#      mappedHost: ca.org2.tracechain.com
